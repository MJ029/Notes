- SET is a collection of unordered, unindexed items, which can be written as a list of comma-separated values (items) between “{ }” curly brackets. 
- Every set element is unique and must be immutable.
- However, a set itself is mutable. We can add or remove items from it, but you cannot update its items.
- It can have any number of items and they may be of different types (integer, float, tuple, string etc.)
- But a set cannot have mutable elements like lists, sets or dictionaries as its elements.
- Common uses include membership testing, removing duplicates from a sequence, and computing standard.
- Math operations on sets such as intersection, union, difference, and symmetric difference.

- add() --> Add one item to set.
  update() --> Add more than one elememt to set.
  union() --> join 2 sets.
  len() --> to get length of set.
  remove() --> To remove element for set.
  discard() --> To remove element for set it will not throw error if item does not exist.
  pop() -->  This will remove last item from set, since sets are unordered we might nor sure which item it is removing.
  clear() --> This method will clear the entire set.
  del() --> This method will delete complete set.
  difference() --> Returns a set containing the difference between two or more sets
  intersection() --> Returns a set, that is the intersection of two other sets
  